@use "sass:math";

/* Grid */
.container {
  width: 90%;
  margin-left: auto;
  margin-right: auto;

  @media only screen and (min-width: $breakpoint-small) {
    width: 80%;
  }

  @media only screen and (min-width: $breakpoint-large) {
    width: 75%;
    max-width: 60rem;
  }
}

.row {
  position: relative;
  width: 100%;
}

.row [class^="col-"] {
  float: left;
  margin: 0.5rem math.div($gutter, 2);
  min-height: 0.125rem;
}

.row::after {
  content: "";
  display: table;
  clear: both;
}

/* Columns for all screen sizes */
@for $i from 1 through $columns {
  .col-#{$i} {
    width: calc($width / $columns * $i - $gutter);
  }
}

/* Columns for the small breakpoint */
@media only screen and (min-width: $breakpoint-small) {
  @for $i from 1 through $columns {
    .col-#{$i}-sm {
      width: calc($width / $columns * $i - $gutter);
    }
  }
}

/* Columns for the medium breakpoint */
@media only screen and (min-width: $breakpoint-med) {
  @for $i from 1 through $columns {
    .col-#{$i}-md {
      width: calc($width / $columns * $i - $gutter);
    }
  }
}

/* Columns for the large breakpoint */
@media only screen and (min-width: $breakpoint-large) {
  @for $i from 1 through $columns {
    .col-#{$i}-lg {
      width: calc($width / $columns * $i - $gutter);
    }
  }
}

/* Columns for the extra large breakpoint */
@media only screen and (min-width: $breakpoint-xlarge) {
  @for $i from 1 through $columns {
    .col-#{$i}-xlg {
      width: calc($width / $columns * $i - $gutter);
    }
  }
}