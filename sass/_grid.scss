@use "sass:math";

// Function for generating column styles
@function generate-width($columns, $i) {
  @return percentage(math.div($i, $columns));
}

// Mixin for generating column styles
@mixin generate-columns($prefix, $breakpoint: null) {
  @for $i from 1 through $columns {
    .#{$prefix}-#{$i}#{$breakpoint} {
      flex: 0 0 generate-width($columns, $i);
      max-width: generate-width($columns, $i);
    }
  }
}

/* Grid */
.container {
  margin-left: auto;
  margin-right: auto;
  display: block;
}

.row {
  margin: 0;
  padding: 0;
  position: relative;
  width: 100%;
  display: flex;
  flex-wrap: wrap;
}

.row [class^="col-"] {
  margin: 0;
  padding: 0;
  min-height: 0.125em;
  box-sizing: border-box;
}

/* Columns for all screen sizes */
@include generate-columns("col");

/* Columns for different breakpoints */
@media only screen and (min-width: $breakpoint-small) {
  @include generate-columns("col", "-sm");
}

@media only screen and (min-width: $breakpoint-med) {
  @include generate-columns("col", "-md");
}

@media only screen and (min-width: $breakpoint-large) {
  @include generate-columns("col", "-lg");
}

@media only screen and (min-width: $breakpoint-xlarge) {
  @include generate-columns("col", "-xlg");
}
